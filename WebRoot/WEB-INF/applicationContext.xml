<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="       
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd       
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd       
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- 导入属性配置文件 
	<context:component-scan base-package="systemmanage"/> -->
	<context:property-placeholder location="classpath:dbmanager.properties" />
	<!-- 定义数据源,使用C3P0数据源实现 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass"
			value="${datasource.driverClassName}" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${datasource.url}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${datasource.username}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${datasource.password}" />
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- insert del update add edit开头的方法，配置事务管理 -->
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<!-- 其他方法只读，一般指查询方法。就不需要事务 -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- <aop:pointcut id="interceptorPointCuts" expression="execution(* service..*.*(..))" /> -->
		<aop:pointcut id="allManagerMethod" expression="execution(* cn.com.bl.dao.*.*(..))" />
		<!-- <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" /> -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" />
	</aop:config>
	
	<!-- 配置 sqlSessionFactory
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="environment" value="org.apache.ibatis.dialect.MysqlDialect"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="mapper"/>
	</bean>-->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="configLocation">
			<value>classpath:iBatisConfig.xml</value>
		</property>
	</bean>
	<!-- 商铺dao -->
	<bean id="shopDao" class="cn.com.bl.dao.impl.ShopDaoImpl">
	<property name="sqlMapClient" ref="sqlMapClient"></property>
	</bean>
	<!-- 商铺action -->
	<bean id="shopAction" class="cn.com.bl.action.ShopAction" scope="prototype">
	<property name="shopDao" ref="shopDao"></property>
	</bean>	
</beans>
